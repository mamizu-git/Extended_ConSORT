init(n, p) 
[ <#n: int, p: int ref> -> 
  <#n: int, p: int ref | int> ]
{
  if n <= 0 then {
    1
  } else {
    p := 0;
    let q = p + 1 in
    let m = n - 1 in
    let d = init(m, q) in
    alias(q = p + 1);
    1
  }
}

verify(n, p)
[ <#n: int, p: int ref> -> 
  <#n: int, p: int ref | int> ]
{
  if n <= 0 then {
    1
  } else {
    let y = *p in
    assert(y = 0);
    let q = p + 1 in
    let m = n - 1 in
    let d = verify(m, q) in
    alias(q = p + 1);
    1
  }
}

{
  let p = mkarray 10 in
  let m = 10 in
  let d = init(m, p) in
  let d2 = verify(m, p) in
  ()
}